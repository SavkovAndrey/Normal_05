#include <iostream>
#include <time.h>
#include <string>

using namespace std;
//---------------------Функции и Прототипы---------------------------------------

/*
Необходимо создать структуру, которая содержит элемент типа int и строку.
Объявить указатель типа структуры(объект структуры) и выделить память для хранения данных одной структуры.
Предложить пользователю внести данные и записать их в элементы объекта структуры.
Далее пользователю необходимо сделать выбор : внести еще данные(создать еще один объект структуры)
либо выйти из программы.
Если пользователь продолжает ввод — необходимо выделить новую память для указателя на объект структуры
и дописать в нее введенные пользователем новые данные.
Цикл выделения новой памяти продолжается, пока пользователь не выберет выход из программы.
*/

struct ST
{
	long age;
	string name;
};

void push_back_st(int& size, ST*& p);


//------------------------MAIN----------------------------------------------------
int main() {
	setlocale(LC_ALL, "RU");
	srand(time(NULL));
	//-------------------------------САМА ПРОГА-------------------------------------

	bool choice = true;
	int size = 1;

    ST* p = new ST[1];




	cout << "Внесите данные " << endl;
	cout << "Имя: ";
	cin >> p[size - 1].name;
	cout << "Возраст: ";
	cin >> p[size - 1].age;

	 

	cout << "Элементы структуры объекта Р: " << p[size - 1].name << "  " << p[size - 1].age << endl;

	cout << "Внести еще данные (1) , выход (0).  Сделайтей выбор: ";
	cin >> choice;

	
	
	
	while (choice)
	{
		  push_back_st(size, p);

		//*********************************************************************************************
		
		//********************************************************************************************

		cout << "Элементы структуры объекта Р: " << endl;

		for (int i = 0; i < size; i++)
		{
			cout << p[i].name << "  " << p[i].age << endl;
		}

		
		cout << "Внести еще данные (1) , выход (0).  Сделайтей выбор: ";
		cin >> choice;

	}

	
	delete[] p;
	return 0;
}



void push_back_st(int& size, ST*&p)
{
	ST* p_reserve = new ST [size + 1];     // создаем резервный массив указателей с местом под лишний элемент
	for (int i = 0; i < size; i++)
	{
		p_reserve[i].age = p[i].age;       // копируем базовый массив в резервный
		p_reserve[i].name = p[i].name;
	}

	// создаем указатель , вносим в него новые данные , заносим его на последнее место в резервный массив
	ST* p_p = new ST[1];
	cout << "Внесите данные " << endl;
	cout << "Имя: ";
	cin >> p_p[0].name;
	cout << "Возраст: ";
	cin >> p_p[0].age;

	p_reserve[size].age = p_p[0].age;
	p_reserve[size].name = p_p[0].name;
	//---------------------------------------------

	size++;
	

	delete[]p;
	p = p_reserve;
	delete[] p_p;

	system("pause");

}



